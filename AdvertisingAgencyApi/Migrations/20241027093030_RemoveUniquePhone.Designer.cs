// <auto-generated />
using System;
using AdvertisingAgencyApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AdvertisingAgencyApi.Migrations
{
    [DbContext(typeof(AdvertisingAgencyContext))]
    [Migration("20241027093030_RemoveUniquePhone")]
    partial class RemoveUniquePhone
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AdvertisingAgencyApi.Models.AdsRate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AdvertisingId")
                        .HasColumnType("bigint");

                    b.Property<float>("AvgQualityScore")
                        .HasColumnType("real")
                        .HasColumnName("avg_quality_score");

                    b.Property<float>("ClickThroughRate")
                        .HasColumnType("real")
                        .HasColumnName("click_through_rate");

                    b.Property<float>("ConversionRate")
                        .HasColumnType("real")
                        .HasColumnName("conversion_rate");

                    b.Property<float>("CostPerClick")
                        .HasColumnType("real")
                        .HasColumnName("cost_per_click");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisingId");

                    b.ToTable("AdsRate", (string)null);
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Advertising", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AdvertisingType")
                        .HasColumnType("text")
                        .HasColumnName("advertising_type");

                    b.Property<long>("CampaignCode")
                        .HasColumnType("bigint")
                        .HasColumnName("campaign_code");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("date")
                        .HasColumnName("end_time");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("date")
                        .HasColumnName("start_time");

                    b.HasKey("Id");

                    b.HasIndex("CampaignCode");

                    b.ToTable("Advertising", (string)null);
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Campaign", b =>
                {
                    b.Property<long>("ContractCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("contract_code");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ContractCode"));

                    b.Property<string>("CurrentStatus")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("current_status");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("description");

                    b.HasKey("ContractCode");

                    b.ToTable("Campaign", (string)null);
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Client", b =>
                {
                    b.Property<long>("PersonId")
                        .HasColumnType("bigint")
                        .HasColumnName("person_id");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("company_name");

                    b.HasKey("PersonId");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Contract", b =>
                {
                    b.Property<long>("ContractCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("contract_code");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ContractCode"));

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("DateDesigned")
                        .HasColumnType("date")
                        .HasColumnName("date_designed");

                    b.Property<long>("ManagerId")
                        .HasColumnType("bigint")
                        .HasColumnName("manager_id");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("date")
                        .HasColumnName("valid_from");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("date")
                        .HasColumnName("valid_to");

                    b.HasKey("ContractCode");

                    b.HasIndex("ClientId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Contract", (string)null);
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Manager", b =>
                {
                    b.Property<long>("PersonId")
                        .HasColumnType("bigint")
                        .HasColumnName("person_id");

                    b.Property<DateTime>("StartedWork")
                        .HasColumnType("date")
                        .HasColumnName("started_work");

                    b.HasKey("PersonId");

                    b.ToTable("Manager", (string)null);
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.AdsRate", b =>
                {
                    b.HasOne("AdvertisingAgencyApi.Models.Advertising", "Advertising")
                        .WithMany("AdsRates")
                        .HasForeignKey("AdvertisingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ads_rate_fk_advertising_id");

                    b.Navigation("Advertising");
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Advertising", b =>
                {
                    b.HasOne("AdvertisingAgencyApi.Models.Campaign", "Campaign")
                        .WithMany("Advertisings")
                        .HasForeignKey("CampaignCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("advertising_fk_campaign_code");

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Client", b =>
                {
                    b.HasOne("AdvertisingAgencyApi.Models.Person", "Person")
                        .WithOne("Client")
                        .HasForeignKey("AdvertisingAgencyApi.Models.Client", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("client_fk_person_id");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Contract", b =>
                {
                    b.HasOne("AdvertisingAgencyApi.Models.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("contract_fk_client_id");

                    b.HasOne("AdvertisingAgencyApi.Models.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("contract_fk_manager_id");

                    b.Navigation("Client");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Manager", b =>
                {
                    b.HasOne("AdvertisingAgencyApi.Models.Person", "Person")
                        .WithOne("Manager")
                        .HasForeignKey("AdvertisingAgencyApi.Models.Manager", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("manager_fk_person_id");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Advertising", b =>
                {
                    b.Navigation("AdsRates");
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Campaign", b =>
                {
                    b.Navigation("Advertisings");
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Client", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("AdvertisingAgencyApi.Models.Person", b =>
                {
                    b.Navigation("Client");

                    b.Navigation("Manager");
                });
#pragma warning restore 612, 618
        }
    }
}
